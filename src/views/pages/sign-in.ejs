<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../partials/head') %>
</head>

<body>
  <header>
    <%- include('../partials/nav', { hideSignIn: true }) %>
  </header>


  <form id="login-form">
    <input type="text" name="login" placeholder="Your user name" />
    <input type="password" name="password" id="password" />
    <button>
      Sign In
    </button>
    <div id="login-error">

    </div>
    </div>
  </form>
</body>
<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-app-compat.js"></script>
<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-auth-compat.js"></script>

<script>
  //import { getAuth, signInWithEmailAndPassword } from "firebase/auth";
  window.onload = () => {
    const firebaseConfig = {
      // CS5356 TODO #2
      // Create your own Firebase project. See the assignment for
      // where you can get the Firebase config
      apiKey: "AIzaSyAIc6yN8_Tjj4rhA1dNulIArBQIFcyeWYM",
      authDomain: "milestone1-33a3d.firebaseapp.com",
      projectId: "milestone1-33a3d",
      storageBucket: "milestone1-33a3d.appspot.com",
      messagingSenderId: "43728818856",
      appId: "1:43728818856:web:8e39a5dccb3e1de755289d",
      measurementId: "G-9ZWW5T9ZG5"
    };

    const app = firebase.initializeApp(firebaseConfig);
    

    app.auth().setPersistence(firebase.auth.Auth.Persistence.NONE);


    document
      .getElementById("login-form")
      .addEventListener("submit", (event) => {
        event.preventDefault();
        const email = event.target.login.value;
        const password = event.target.password.value;
        
        
        // CS5356 TODO #3
        // Sign in using the Firebase SDK for Web

        
       

        //const auth = getAuth();
        app.auth().signInWithEmailAndPassword(email, password)
          .then((userCredential) => {
            // Signed in 
            const user = userCredential.user;
            
            user.getIdToken().then((idToken) => {
              fetch('/sessionLogin', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({idToken})
              }).then(() =>{
                window.location.href ='/dashboard'
              })
            })
            
            // ...
          })
          .catch((error) => {
            const errorCode = error.code;
            const errorMessage = error.message;
          });

        

        // console.log(auth)
        // auth.createUserWithEmailAndPassword(email, password)
        //   .then((userCredential) => {
        //     // Signed in 
        //     const user = userCredential.user;
        //     console.log("Success!")
        //     //make a fetch to add headers and include the ID token in the request body
        //     // ...
        //     /*
        //     const csrfToken = getCookie('csrfToken') -> dont worry about this
        //     return postIdTokenToSessionLogin('/sessionLogin', idToken, csrfToken); -> this is the fetch thing
        //     */

        //    console.log("hihi") 


        //   //   firebase.initializeApp({
        //   //   apiKey: 'AIzaSyAIc6yN8_Tjj4rhA1dNulIArBQIFcyeWYM',
        //   //   authDomain: 'milestone1.firebasepp.com'
        //   // });
        //   console.log("ye")
        //   // As httpOnly cookies are to be used, do not persist any state client side.
        //   firebase.auth().setPersistence(firebase.auth.Auth.Persistence.NONE);
        //   console.log("1")
        //   // When the user signs in with email and password.
        //   firebase.auth().signInWithEmailAndPassword('user@example.com', 'password').then(user => {
        //     // Get the user's ID token as it is needed to exchange for a session cookie.
        //     console.log("2")
        //     return user.getIdToken().then(idToken => {
        //       // Session login endpoint is queried and the session cookie is set.
        //       // CSRF protection should be taken into account.
        //       // ...
        //       console.log("3")
        //       //const csrfToken = getCookie('csrfToken')
        //       return postIdTokenToSessionLogin('/sessionLogin', idToken, csrfToken);
        //     });
        //   }).then(() => {
        //     // A page redirect would suffice as the persistence is set to NONE.
        //     return firebase.auth().signOut();
        //   }).then(() => {
        //     window.location.assign('/dashboard');
        //   });




        //   })
        //   .catch((error) => {
        //     const errorCode = error.code;
        //     const errorMessage = error.message;
        //     // ..
        //     console.log(errorCode, errorMessage)
        //   });

        // Get the users ID token
        // Start a new session with the users ID token
        // Redirect the user to the /dashboard

        //return false;
      });
  };
</script>

</html>